const { z } = require("zod");

//name is required, parent_d is optional and slug is generated by the backend
const createCategoryRequestSchema = z.object({
  name: z.string().min(2, "Category name must be at least 2 characters long"),
  parent_id: z
    .string()
    .uuid("If provided, parent_id must be a valid UUID")
    .nullable()
    .optional(),
});

const updateCategoryRequestSchema = createCategoryRequestSchema.partial();

const categoryResponseSchema = z.object({
  id: z.string().uuid(),
  name: z.string(),
  slug: z.string(),
  parent_id: z.string().uuid().nullable(),
  is_active: z.boolean(),
  created_at: z.date(),
  updated_At: z.date(),
});

//category tree (hierarchy)
const nestedCategoryResponseSchema = z.lazy(() =>
  categoryResponseSchema.extend({
    children: z.array(nestedCategoryResponseSchema).optional(),
  })
);

const categoryListResponseSchema = z.array(categoryResponseSchema);

module.exports = {
  createCategoryRequestSchema,
  updateCategoryRequestSchema,
  categoryResponseSchema,
  categoryListResponseSchema,
  nestedCategoryResponseSchema,
};
