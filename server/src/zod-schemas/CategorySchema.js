const { z } = require('zod');

//name is required, parentId is optional and slug is generated by the backend
const createCategoryRequestSchema = z.object({
  name: z.string().min(2, 'Category name must be at least 2 characters long'),
  parentId: z.coerce.number().int().positive().nullable().optional(),
});

const updateCategoryRequestSchema = createCategoryRequestSchema.partial();

const categoryResponseSchema = z.object({
  id: z.number().int().positive(),
  name: z.string(),
  slug: z.string(),
  parentId: z.number().int().positive().nullable(),
  isActive: z.boolean(),
  createdAt: z.date(),
  updatedAt: z.date(),
});

//category tree (hierarchy)
const nestedCategoryResponseSchema = z.lazy(() =>
  categoryResponseSchema.extend({
    children: z.array(nestedCategoryResponseSchema).optional(),
  })
);

const categoryListResponseSchema = z.array(categoryResponseSchema);

module.exports = {
  createCategoryRequestSchema,
  updateCategoryRequestSchema,
  categoryResponseSchema,
  categoryListResponseSchema,
  nestedCategoryResponseSchema,
};
